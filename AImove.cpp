//=============================================================================
//
// AImove処理 [AImove.cpp]
// Author : Seiya Takahashi
//
//=============================================================================
#include "renderer.h"
#include "manager.h"
#include "AImove.h"
#include "object.h"
#include "enemy.h"
#include "game.h"

//=============================================================================
// 静的メンバ変数の初期化
//=============================================================================
std::vector<CObject*> CAImove::m_pointObj = {};

//=============================================================================
// コンストラクタ
//=============================================================================
CAImove::CAImove()
{
	m_pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
}

//=============================================================================
// デストラクタ
//=============================================================================
CAImove::~CAImove()
{

}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CAImove::Init(void)
{
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CAImove::Uninit(void)
{

}

//=============================================================================
// 更新処理
//=============================================================================
void CAImove::Update(void)
{
	// 敵の取得
	CEnemy *pEnemy = CGame::GetEnemy();
	D3DXVECTOR3 enemyPos = pEnemy->GetPosition();

	m_pointObj = CObject::GetPointObj();
}

//=============================================================================
// 生成処理
//=============================================================================
CAImove * CAImove::Create(void)
{
	CAImove *pAImove;		// AIのポインタ

	pAImove = new CAImove();		// 背景の生成
	pAImove->Init();							// 背景の初期化
	return pAImove;
}
